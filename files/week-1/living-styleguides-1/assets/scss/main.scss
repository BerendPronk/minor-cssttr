// CONFIG

// colors
$color-theme:	#33ccaa;
$color-black:	#222222;
$color-grey:	#666666;
$color-white:	#f2f2f2;

// components
$login:					'login';
$navigation:			'navigation';
$picture-with-subtitle:	'picture-with-subtitle';
$media-item:			'media-item';
$chat:					'chat';
$step-indicator:		'step-indicator';
$rating:				'rating';
$tests:					'tests';

// mixins

// adds prefixes to transform
@mixin transform($params) {
	-webkit-transform: $params;
	-ms-transform: $params;
	transform: $params;
}

// checks how many children a parent has
// source: presentation CCSTTR from Rik
@mixin children-amount($count) {
	>*:first-child:nth-last-child(#{$count}),
	>*:first-child:nth-last-child(#{$count}) ~ * {
		@content;
	}
}

// STYLING
@font-face {
	font-family: Ampersand;
	src: url('../fonts/playfair-display-sc.woff2');
	unicode-range: U+26;
}

* {
	margin: 0;
	padding: 0;
}

.clear {
	display: block;
	content: "";
	clear: both;
}

body {
	max-width: 100vw;
	overflow-x: hidden;
	padding: 1rem;
	font-family: 'Noto Sans', sans-serif;
	font-size: 16px;
	color: $color-black;

	@media (min-width: 40rem) {
		padding: 4rem;
		padding-left: calc(100vw / 6);
	}

	@media (min-width: 100rem) {
		display: grid;
		grid-template-columns: calc(100% / 3) calc(100% / 3) calc(100% / 3);
		padding: 4rem;
	}

	& > h1 {
		font-size: 3em;

		@media (min-width: 40rem) {
			font-size: 4em;
		}
	}

	& > section {
		width: 95%;
		max-width: 40rem;
		margin: 0 auto;
		margin-bottom: 1rem;
		padding-bottom: 1rem;
		border-bottom: 1px solid $color-grey;

		&:last-of-type {
			border-bottom: none;
		}

		@media (min-width: 40rem) {
			margin: 0;
			margin-bottom: 2rem;
			padding-bottom: 2rem;
		}
	}
}

h1, h2, h3, legend {
	font-family: Ampersand, 'Oswald', sans-serif;
	font-weight: normal;
	text-transform: uppercase;
	color: $color-theme;
}

h1 {
	font-size: 2em;
	margin-bottom: 1em;

	a {
		position: relative;
		text-decoration: underline;

		@media (min-width: 40rem) {

			&::before {
				position: absolute;
				top: .75rem;
				left: -2rem;
				content: "ðŸ”—";
				font-size: .5em;
				color: $color-grey;
			}
		}
	}
}

a {
	color: $color-theme;
	text-decoration: none;
}

form {

	label {
		display: block;
		margin-bottom: .5rem;
		color: $color-black;
	}

	input {
		display: block;
		margin-bottom: 1rem;
		padding: .5rem;
		border-radius: 0;
		border: 1px solid $color-grey;
	}

	button {
		position: relative;
		z-index: 1;
		color: $color-white;
		padding: .75rem 1rem;
		font-size: 1.2rem;
		cursor: pointer;
		border: none;
		background-color: $color-theme;

		&::before {
			position: absolute;
			top: 0;
			left: 0;
			right: 100%;
			bottom: 0;
			z-index: -1;
			content: "";
			background-color: darken($color-theme, 20%);
			transition: .1s ease;
		}

		&:hover {

			&::before {
				right: 0;
			}
		}

		@media (min-width: 40rem) {
			padding: .5rem .75rem;
			font-size: 1rem;
		}
	}
}

figure {
	margin-bottom: 1rem;

	img {
		position: relative;
		left: 50%;
		max-width: 100%;
		max-height: 25rem;
		@include transform(translateX(-50%));
	}

	& ~ figcaption {

		footer {
			margin-top: 1rem;
			font-style: italic;
		}
	}
}

fieldset {
	border: none;

	legend {
		font-size: 2em;
		margin-bottom: 1em;
	}
}

##{$login} {

	form {

		[type="checkbox"] {
			float: left;
			margin-right: .5rem;

			& ~ label::after {
				@extend .clear;
			}
		}

		a {
			font-size: 1rem;

			&::after {
				@extend .clear;
				margin-bottom: 1rem;
			}
		}
	}
}

##{$navigation} {

	nav {

		& > ul {
			position: relative;
			display: flex;
			margin-bottom: 4rem;
			border-bottom: 1px solid lighten($color-grey, 50%);

			li {
				position: relative;
				margin-right: 1rem;
				list-style-type: none;

				@media (min-width: 40rem) {

					// CSS4 - :has() pseudo-class selector, has not been added to chrome yet (?)
					&:nth-of-type(2):hover li {
						opacity: 1;
						@include transform(translateY(0));
						transition: .3s ease;

						@for $i from 1 through 3 {
							&:nth-of-type(#{$i}) {
								transition-delay: 0.1s * $i;
							}
						}
					}
				}

				&:last-of-type {
					margin-right: 0;
				}

				[aria-label*="current page"] {
					border-bottom: .1rem solid $color-theme;
				}

				ul {
					display: flex;
					flex-direction: column;
					position: absolute;
					margin-top: .25rem;

					li {

						@media (min-width: 40rem) {
							opacity: 0;
							@include transform(translateY(-4em));
							transition: .25s ease;
						}
					}
				}
			}
		}
	}
}

##{$picture-with-subtitle} {

	// added anchors and ID's in order to make the modal work with target
	[id^="img"] {
		position: relative;
		z-index: 2;
		transition: .3s ease;

		&::before {
			position: fixed;
			top: 0;
			left: 0;
			z-index: 1;
			width: 100vw;
			height: 100vh;
			content: "";
			cursor: zoom-out;
			opacity: 0;
			pointer-events: none;
			background-color: $color-black;
		}

		&:target {
			// display: flex;
			// justify-content: center;
			// align-items: center;

			&::before {
				pointer-events: all;
				transition: opacity 1s ease;
			}

			img {
				position: fixed;
				top: 50%;
				left: 50%;
				max-width: 85vw;
				max-height: 85vh;
				box-shadow: 0 0 0 50vmax rgba(0, 0, 0, .5);
				@include transform(translate(-50%,-50%));
			}
		}
	}
}

##{$media-item} {

	article {

		&::after {
			@extend .clear;
		}

		img {
			float: left;
			width: 100%;
			margin-right: 1.5rem;
			margin-bottom: 1rem;

			@media (min-width: 40rem) {
				width: 30%;
				margin-bottom: 0;
			}
		}

		p {
			float: left;
			width: 100%;

			@media (min-width: 40rem) {
				width: calc(70% - 1.5rem);
			}
		}
	}
}

##{$chat} {

	& > * {
		width: 100%;
		box-sizing: border-box;
		padding: 1rem;
		border: 1px solid $color-grey;

		@media (min-width: 40rem) {
			width: 80%;
		}
	}

	ol {
		float: left;
		border-bottom: 0;

		li {
			display: block;
			position: relative;
			min-width: 45%;
			max-width: 70%;
			margin-bottom: 1rem;
			padding: 1em;
			list-style-type: none;

			&::before {
				position: absolute;
				bottom: 0;
				width: 1rem;
				height: 1rem;
				content: "";
			}

			// I did not change the HTML. Would otherwise use a 'data-type' attribute on the chat <li>'s
			&:nth-child(odd) {
				float: right;
				margin-right: 1rem;
				border-radius: .5rem .5rem 0 .5rem;
				background-color: $color-theme;

				&::before {
					right: -.4rem;
					border-radius: 0 0 .5rem 0;
					background-color: $color-theme;
					@include transform(skewX(40deg))
				}

				[data-status] {
					font-style: italic;

					&::after {
						position: absolute;
						bottom: .25rem;
						right: .65rem;
						content: "âœ“";
						font-style: normal;
					}
				}

				// CSS4 - Case-insensitive attributes, has not been added to chrome yet (?)
				[data-status="READ"] {

					&::after {
						color: $color-white;
						text-shadow: -.5rem 0 0 $color-white;
					}
				}
			}

			&:nth-child(even) {
				float: left;
				margin-left: 1rem;
				border-radius: .5rem .5rem .5rem 0;
				background-color: lighten($color-grey, 50%);

				&::before {
					left: -.4rem;
					border-radius: 0 0 0 .5rem;
					background-color: lighten($color-grey, 50%);
					@include transform(skewX(-40deg))
				}
			}

			footer {
				margin-top: .5rem;
				padding-top: .5rem;
				font-size: .8em;
				border-top: 1px solid rgba(0, 0, 0, .1);
			}
		}
	}

	form {
		display: flex;
		flex-wrap: wrap;

		label {
			width: 100%;

			&::after {
				content: ":";
			}
		}

		textarea {
			box-sizing: border-box;
			width: 100%;
			resize: vertical;
			padding: 1em;
			font-family: 'Noto Sans', sans-serif;
			border: 1px solid $color-grey;

			@media (min-width: 40rem) {
				width: 80%;
			}
		}

		button {
			width: 100%;
			border: none;

			@media (min-width: 40rem) {
				width: 20%;
				border: 1px solid $color-grey;
				border-left: none;
			}
		}
	}
}

##{$step-indicator} {

	progress {
		-webkit-appearance: none;
		appearance: none;
		width: 100%;
		margin-bottom: 1rem;

		&::-webkit-progress-bar {
			background-color: lighten($color-grey, 50%);
		}

		&::-webkit-progress-value {
			background-color: $color-theme;
		}
	}

	ol {
		padding: 0;
		display: flex;
		justify-content: space-around;

		@media (min-width: 40rem) {
			padding: 0 1rem;
		}

		li {
			font-size: .8em;

			@media (min-width: 40rem) {
				width: 30%;
			}
		}
	}
}

##{$rating} {

	fieldset {

		label {
			display: block;
			float: left;
			width: 3em;
			cursor: pointer;
			text-align: center;

			svg {
				margin-top: .5rem;
			}

			& + input {
				position: relative;
				z-index: -1;
				outline: none;
				@include transform(translate(-2.2em, 3.6em));

				&::after {
					display: block;
					width: 3em;
					height: 3em;
					content: "";
					border-radius: 50%;
					@include transform(translate(-1.1em, -1.1em));
				}

				&:checked::after{
					box-shadow: 0 0 1rem .25rem $color-theme;
				}
			}
		}

		input {
			float: left;
			margin-right: .4rem;
		}
	}
}

##{$tests} {

	ul {
		display: flex;

		li {
			margin-right: 1rem;
			margin-bottom: 1rem;
			padding: 1rem;
			list-style-type: none;

			&:last-of-type {
				margin-right: 0;
			}
		}

		@include children-amount(1) {
			background-color: lighten($color-theme, 25%)
		}
		@include children-amount(2) {
			background-color: lighten($color-theme, 12.5%)
		}
		@include children-amount(3) {
			background-color: $color-theme;
		}
	}
}